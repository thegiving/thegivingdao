type Campaign @entity {
  id: ID!
  campaignId: Bytes!
  account: Account!
  kind: Int!,
  category: CampaignCategory!
  goal: BigInt!
  donated: BigInt!
  donations: [Donation!] @derivedFrom(field: "campaign")
  totalDonations: BigInt!
  amountPaid: BigInt!
  state: Int!
  createdAt: BigInt!
  startAt: BigInt!
  endAt: BigInt
  name: String
  description: String
  imageURL: String
  videoURL: String
}

type Account @entity {
  id: ID!
  accountId: Bytes!
  owner: Bytes!
  kind: Int!
  dataCID:  String!
  verificationState: Int!
  campaigns: [Campaign!] @derivedFrom(field: "account")
  donations: [Donation!] @derivedFrom(field: "sender")
  payouts: [Distribution!] @derivedFrom(field: "receiver")
  totalCampaigns: BigInt!
  totalDonations: BigInt!
  timestamp: BigInt!
  firstName: String
  lastName: String
  organization: String
  email: String
  profilePicURL: String
}

type Donation @entity {
  id: ID!
  campaign: Campaign!
  amount: BigInt!
  timestamp: BigInt!
  sender: Account!
}

type Distribution @entity {
  id: ID!
  campaign: Campaign!
  amount: BigInt!
  timestamp: BigInt!
  receiver: Account!
}

type CampaignCategory @entity {
  id: ID!
  categoryId: Bytes!
  name: String!
}

# enum AccountKind {
#   Individual
#   Charity
#   NonProfitCharity
#   NonProfit
# }

# enum CampaignKind {
#   Governance
#   NoGovernance
#   OptionalGovernance
# }

# enum CampaignState {
#   Active
#   Draft
#   Refunding
#   Closed
#   Voting
# }

# enum VeritifcationState {
#   NotVerified
#   Verified
#   InReview
#   NotApplicable
# }


