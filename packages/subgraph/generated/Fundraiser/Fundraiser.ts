// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AccountCreated extends ethereum.Event {
  get params(): AccountCreated__Params {
    return new AccountCreated__Params(this);
  }
}

export class AccountCreated__Params {
  _event: AccountCreated;

  constructor(event: AccountCreated) {
    this._event = event;
  }

  get accountId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get accountDataCID(): string {
    return this._event.parameters[1].value.toString();
  }

  get kind(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get owner(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class AccountUpdated extends ethereum.Event {
  get params(): AccountUpdated__Params {
    return new AccountUpdated__Params(this);
  }
}

export class AccountUpdated__Params {
  _event: AccountUpdated;

  constructor(event: AccountUpdated) {
    this._event = event;
  }

  get accountId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get dataCID(): string {
    return this._event.parameters[1].value.toString();
  }

  get kind(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get owenr(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class CampaignCategoryCreated extends ethereum.Event {
  get params(): CampaignCategoryCreated__Params {
    return new CampaignCategoryCreated__Params(this);
  }
}

export class CampaignCategoryCreated__Params {
  _event: CampaignCategoryCreated;

  constructor(event: CampaignCategoryCreated) {
    this._event = event;
  }

  get categoryId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get name(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get caller(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class CampaignClosed extends ethereum.Event {
  get params(): CampaignClosed__Params {
    return new CampaignClosed__Params(this);
  }
}

export class CampaignClosed__Params {
  _event: CampaignClosed;

  constructor(event: CampaignClosed) {
    this._event = event;
  }

  get campaignId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get state(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get caller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CampaignCreated extends ethereum.Event {
  get params(): CampaignCreated__Params {
    return new CampaignCreated__Params(this);
  }
}

export class CampaignCreated__Params {
  _event: CampaignCreated;

  constructor(event: CampaignCreated) {
    this._event = event;
  }

  get campaign(): CampaignCreatedCampaignStruct {
    return changetype<CampaignCreatedCampaignStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }

  get createdAt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CampaignCreatedCampaignStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get account(): CampaignCreatedCampaignAccountStruct {
    return changetype<CampaignCreatedCampaignAccountStruct>(this[1].toTuple());
  }

  get dataCID(): string {
    return this[2].toString();
  }

  get kind(): i32 {
    return this[3].toI32();
  }

  get categoryId(): Bytes {
    return this[4].toBytes();
  }

  get startAt(): BigInt {
    return this[5].toBigInt();
  }

  get endAt(): BigInt {
    return this[6].toBigInt();
  }

  get goal(): BigInt {
    return this[7].toBigInt();
  }

  get donated(): BigInt {
    return this[8].toBigInt();
  }

  get paid(): BigInt {
    return this[9].toBigInt();
  }

  get numDonations(): BigInt {
    return this[10].toBigInt();
  }

  get state(): i32 {
    return this[11].toI32();
  }
}

export class CampaignCreatedCampaignAccountStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get dataCID(): string {
    return this[2].toString();
  }

  get kind(): i32 {
    return this[3].toI32();
  }

  get verification(): i32 {
    return this[4].toI32();
  }
}

export class CampaignPublished extends ethereum.Event {
  get params(): CampaignPublished__Params {
    return new CampaignPublished__Params(this);
  }
}

export class CampaignPublished__Params {
  _event: CampaignPublished;

  constructor(event: CampaignPublished) {
    this._event = event;
  }

  get campaignId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get state(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get caller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CampaignUpdated extends ethereum.Event {
  get params(): CampaignUpdated__Params {
    return new CampaignUpdated__Params(this);
  }
}

export class CampaignUpdated__Params {
  _event: CampaignUpdated;

  constructor(event: CampaignUpdated) {
    this._event = event;
  }

  get campaign(): CampaignUpdatedCampaignStruct {
    return changetype<CampaignUpdatedCampaignStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }

  get updatedAt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CampaignUpdatedCampaignStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get account(): CampaignUpdatedCampaignAccountStruct {
    return changetype<CampaignUpdatedCampaignAccountStruct>(this[1].toTuple());
  }

  get dataCID(): string {
    return this[2].toString();
  }

  get kind(): i32 {
    return this[3].toI32();
  }

  get categoryId(): Bytes {
    return this[4].toBytes();
  }

  get startAt(): BigInt {
    return this[5].toBigInt();
  }

  get endAt(): BigInt {
    return this[6].toBigInt();
  }

  get goal(): BigInt {
    return this[7].toBigInt();
  }

  get donated(): BigInt {
    return this[8].toBigInt();
  }

  get paid(): BigInt {
    return this[9].toBigInt();
  }

  get numDonations(): BigInt {
    return this[10].toBigInt();
  }

  get state(): i32 {
    return this[11].toI32();
  }
}

export class CampaignUpdatedCampaignAccountStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get dataCID(): string {
    return this[2].toString();
  }

  get kind(): i32 {
    return this[3].toI32();
  }

  get verification(): i32 {
    return this[4].toI32();
  }
}

export class DistributedFunds extends ethereum.Event {
  get params(): DistributedFunds__Params {
    return new DistributedFunds__Params(this);
  }
}

export class DistributedFunds__Params {
  _event: DistributedFunds;

  constructor(event: DistributedFunds) {
    this._event = event;
  }

  get campaignId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class DonationMade extends ethereum.Event {
  get params(): DonationMade__Params {
    return new DonationMade__Params(this);
  }
}

export class DonationMade__Params {
  _event: DonationMade;

  constructor(event: DonationMade) {
    this._event = event;
  }

  get campaignId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Fundraiser__accountsResult {
  value0: Bytes;
  value1: Address;
  value2: string;
  value3: i32;
  value4: i32;

  constructor(
    value0: Bytes,
    value1: Address,
    value2: string,
    value3: i32,
    value4: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    return map;
  }

  getId(): Bytes {
    return this.value0;
  }

  getOwner(): Address {
    return this.value1;
  }

  getDataCID(): string {
    return this.value2;
  }

  getKind(): i32 {
    return this.value3;
  }

  getVerification(): i32 {
    return this.value4;
  }
}

export class Fundraiser__campaignsResultAccountStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get dataCID(): string {
    return this[2].toString();
  }

  get kind(): i32 {
    return this[3].toI32();
  }

  get verification(): i32 {
    return this[4].toI32();
  }
}

export class Fundraiser__campaignsResult {
  value0: Bytes;
  value1: Fundraiser__campaignsResultAccountStruct;
  value2: string;
  value3: i32;
  value4: Bytes;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: BigInt;
  value11: i32;

  constructor(
    value0: Bytes,
    value1: Fundraiser__campaignsResultAccountStruct,
    value2: string,
    value3: i32,
    value4: Bytes,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: BigInt,
    value11: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set("value4", ethereum.Value.fromFixedBytes(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    map.set(
      "value11",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value11))
    );
    return map;
  }

  getId(): Bytes {
    return this.value0;
  }

  getAccount(): Fundraiser__campaignsResultAccountStruct {
    return this.value1;
  }

  getDataCID(): string {
    return this.value2;
  }

  getKind(): i32 {
    return this.value3;
  }

  getCategoryId(): Bytes {
    return this.value4;
  }

  getStartAt(): BigInt {
    return this.value5;
  }

  getEndAt(): BigInt {
    return this.value6;
  }

  getGoal(): BigInt {
    return this.value7;
  }

  getDonated(): BigInt {
    return this.value8;
  }

  getPaid(): BigInt {
    return this.value9;
  }

  getNumDonations(): BigInt {
    return this.value10;
  }

  getState(): i32 {
    return this.value11;
  }
}

export class Fundraiser__campaignsByAccountResultAccountStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get dataCID(): string {
    return this[2].toString();
  }

  get kind(): i32 {
    return this[3].toI32();
  }

  get verification(): i32 {
    return this[4].toI32();
  }
}

export class Fundraiser__campaignsByAccountResult {
  value0: Bytes;
  value1: Fundraiser__campaignsByAccountResultAccountStruct;
  value2: string;
  value3: i32;
  value4: Bytes;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: BigInt;
  value11: i32;

  constructor(
    value0: Bytes,
    value1: Fundraiser__campaignsByAccountResultAccountStruct,
    value2: string,
    value3: i32,
    value4: Bytes,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: BigInt,
    value11: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set("value4", ethereum.Value.fromFixedBytes(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    map.set(
      "value11",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value11))
    );
    return map;
  }

  getId(): Bytes {
    return this.value0;
  }

  getAccount(): Fundraiser__campaignsByAccountResultAccountStruct {
    return this.value1;
  }

  getDataCID(): string {
    return this.value2;
  }

  getKind(): i32 {
    return this.value3;
  }

  getCategoryId(): Bytes {
    return this.value4;
  }

  getStartAt(): BigInt {
    return this.value5;
  }

  getEndAt(): BigInt {
    return this.value6;
  }

  getGoal(): BigInt {
    return this.value7;
  }

  getDonated(): BigInt {
    return this.value8;
  }

  getPaid(): BigInt {
    return this.value9;
  }

  getNumDonations(): BigInt {
    return this.value10;
  }

  getState(): i32 {
    return this.value11;
  }
}

export class Fundraiser__donationsByCampaignResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;

  constructor(value0: BigInt, value1: BigInt, value2: Address) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    return map;
  }

  getAmount(): BigInt {
    return this.value0;
  }

  getTimestamp(): BigInt {
    return this.value1;
  }

  getSender(): Address {
    return this.value2;
  }
}

export class Fundraiser extends ethereum.SmartContract {
  static bind(address: Address): Fundraiser {
    return new Fundraiser("Fundraiser", address);
  }

  ADMIN_ROLE(): Bytes {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAUSER_ROLE(): Bytes {
    let result = super.call("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAUSER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  accounts(param0: Address): Fundraiser__accountsResult {
    let result = super.call(
      "accounts",
      "accounts(address):(bytes32,address,string,uint8,uint8)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Fundraiser__accountsResult(
      result[0].toBytes(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toI32(),
      result[4].toI32()
    );
  }

  try_accounts(
    param0: Address
  ): ethereum.CallResult<Fundraiser__accountsResult> {
    let result = super.tryCall(
      "accounts",
      "accounts(address):(bytes32,address,string,uint8,uint8)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Fundraiser__accountsResult(
        value[0].toBytes(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toI32(),
        value[4].toI32()
      )
    );
  }

  campaignCategories(param0: Bytes): string {
    let result = super.call(
      "campaignCategories",
      "campaignCategories(bytes32):(string)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toString();
  }

  try_campaignCategories(param0: Bytes): ethereum.CallResult<string> {
    let result = super.tryCall(
      "campaignCategories",
      "campaignCategories(bytes32):(string)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  campaigns(param0: Bytes): Fundraiser__campaignsResult {
    let result = super.call(
      "campaigns",
      "campaigns(bytes32):(bytes32,(bytes32,address,string,uint8,uint8),string,uint8,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new Fundraiser__campaignsResult(
      result[0].toBytes(),
      changetype<Fundraiser__campaignsResultAccountStruct>(result[1].toTuple()),
      result[2].toString(),
      result[3].toI32(),
      result[4].toBytes(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBigInt(),
      result[11].toI32()
    );
  }

  try_campaigns(
    param0: Bytes
  ): ethereum.CallResult<Fundraiser__campaignsResult> {
    let result = super.tryCall(
      "campaigns",
      "campaigns(bytes32):(bytes32,(bytes32,address,string,uint8,uint8),string,uint8,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Fundraiser__campaignsResult(
        value[0].toBytes(),
        changetype<Fundraiser__campaignsResultAccountStruct>(
          value[1].toTuple()
        ),
        value[2].toString(),
        value[3].toI32(),
        value[4].toBytes(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBigInt(),
        value[11].toI32()
      )
    );
  }

  campaignsByAccount(
    param0: Bytes,
    param1: BigInt
  ): Fundraiser__campaignsByAccountResult {
    let result = super.call(
      "campaignsByAccount",
      "campaignsByAccount(bytes32,uint256):(bytes32,(bytes32,address,string,uint8,uint8),string,uint8,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,uint8)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new Fundraiser__campaignsByAccountResult(
      result[0].toBytes(),
      changetype<Fundraiser__campaignsByAccountResultAccountStruct>(
        result[1].toTuple()
      ),
      result[2].toString(),
      result[3].toI32(),
      result[4].toBytes(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBigInt(),
      result[11].toI32()
    );
  }

  try_campaignsByAccount(
    param0: Bytes,
    param1: BigInt
  ): ethereum.CallResult<Fundraiser__campaignsByAccountResult> {
    let result = super.tryCall(
      "campaignsByAccount",
      "campaignsByAccount(bytes32,uint256):(bytes32,(bytes32,address,string,uint8,uint8),string,uint8,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,uint8)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Fundraiser__campaignsByAccountResult(
        value[0].toBytes(),
        changetype<Fundraiser__campaignsByAccountResultAccountStruct>(
          value[1].toTuple()
        ),
        value[2].toString(),
        value[3].toI32(),
        value[4].toBytes(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBigInt(),
        value[11].toI32()
      )
    );
  }

  createCampaign(
    dataCID: string,
    kind: i32,
    categoryId: Bytes,
    startAt: BigInt,
    endAt: BigInt,
    goal: BigInt
  ): Bytes {
    let result = super.call(
      "createCampaign",
      "createCampaign(string,uint8,bytes32,uint256,uint256,uint256):(bytes32)",
      [
        ethereum.Value.fromString(dataCID),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(kind)),
        ethereum.Value.fromFixedBytes(categoryId),
        ethereum.Value.fromUnsignedBigInt(startAt),
        ethereum.Value.fromUnsignedBigInt(endAt),
        ethereum.Value.fromUnsignedBigInt(goal)
      ]
    );

    return result[0].toBytes();
  }

  try_createCampaign(
    dataCID: string,
    kind: i32,
    categoryId: Bytes,
    startAt: BigInt,
    endAt: BigInt,
    goal: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createCampaign",
      "createCampaign(string,uint8,bytes32,uint256,uint256,uint256):(bytes32)",
      [
        ethereum.Value.fromString(dataCID),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(kind)),
        ethereum.Value.fromFixedBytes(categoryId),
        ethereum.Value.fromUnsignedBigInt(startAt),
        ethereum.Value.fromUnsignedBigInt(endAt),
        ethereum.Value.fromUnsignedBigInt(goal)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  donationsByCampaign(
    param0: Bytes,
    param1: BigInt
  ): Fundraiser__donationsByCampaignResult {
    let result = super.call(
      "donationsByCampaign",
      "donationsByCampaign(bytes32,uint256):(uint256,uint256,address)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new Fundraiser__donationsByCampaignResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress()
    );
  }

  try_donationsByCampaign(
    param0: Bytes,
    param1: BigInt
  ): ethereum.CallResult<Fundraiser__donationsByCampaignResult> {
    let result = super.tryCall(
      "donationsByCampaign",
      "donationsByCampaign(bytes32,uint256):(uint256,uint256,address)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Fundraiser__donationsByCampaignResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress()
      )
    );
  }

  getAccountKindByValue(_kind: i32): string {
    let result = super.call(
      "getAccountKindByValue",
      "getAccountKindByValue(uint8):(string)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_kind))]
    );

    return result[0].toString();
  }

  try_getAccountKindByValue(_kind: i32): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getAccountKindByValue",
      "getAccountKindByValue(uint8):(string)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_kind))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getCampaignCategories(): Array<Bytes> {
    let result = super.call(
      "getCampaignCategories",
      "getCampaignCategories():(bytes32[])",
      []
    );

    return result[0].toBytesArray();
  }

  try_getCampaignCategories(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getCampaignCategories",
      "getCampaignCategories():(bytes32[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getCampaignKindByValue(_kind: i32): string {
    let result = super.call(
      "getCampaignKindByValue",
      "getCampaignKindByValue(uint8):(string)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_kind))]
    );

    return result[0].toString();
  }

  try_getCampaignKindByValue(_kind: i32): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getCampaignKindByValue",
      "getCampaignKindByValue(uint8):(string)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_kind))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CloseCampaignCall extends ethereum.Call {
  get inputs(): CloseCampaignCall__Inputs {
    return new CloseCampaignCall__Inputs(this);
  }

  get outputs(): CloseCampaignCall__Outputs {
    return new CloseCampaignCall__Outputs(this);
  }
}

export class CloseCampaignCall__Inputs {
  _call: CloseCampaignCall;

  constructor(call: CloseCampaignCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CloseCampaignCall__Outputs {
  _call: CloseCampaignCall;

  constructor(call: CloseCampaignCall) {
    this._call = call;
  }
}

export class CreateAccountCall extends ethereum.Call {
  get inputs(): CreateAccountCall__Inputs {
    return new CreateAccountCall__Inputs(this);
  }

  get outputs(): CreateAccountCall__Outputs {
    return new CreateAccountCall__Outputs(this);
  }
}

export class CreateAccountCall__Inputs {
  _call: CreateAccountCall;

  constructor(call: CreateAccountCall) {
    this._call = call;
  }

  get dataCID(): string {
    return this._call.inputValues[0].value.toString();
  }

  get kind(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class CreateAccountCall__Outputs {
  _call: CreateAccountCall;

  constructor(call: CreateAccountCall) {
    this._call = call;
  }
}

export class CreateCampaignCall extends ethereum.Call {
  get inputs(): CreateCampaignCall__Inputs {
    return new CreateCampaignCall__Inputs(this);
  }

  get outputs(): CreateCampaignCall__Outputs {
    return new CreateCampaignCall__Outputs(this);
  }
}

export class CreateCampaignCall__Inputs {
  _call: CreateCampaignCall;

  constructor(call: CreateCampaignCall) {
    this._call = call;
  }

  get dataCID(): string {
    return this._call.inputValues[0].value.toString();
  }

  get kind(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get categoryId(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get startAt(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get endAt(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get goal(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class CreateCampaignCall__Outputs {
  _call: CreateCampaignCall;

  constructor(call: CreateCampaignCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class DistributeFundsCall extends ethereum.Call {
  get inputs(): DistributeFundsCall__Inputs {
    return new DistributeFundsCall__Inputs(this);
  }

  get outputs(): DistributeFundsCall__Outputs {
    return new DistributeFundsCall__Outputs(this);
  }
}

export class DistributeFundsCall__Inputs {
  _call: DistributeFundsCall;

  constructor(call: DistributeFundsCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DistributeFundsCall__Outputs {
  _call: DistributeFundsCall;

  constructor(call: DistributeFundsCall) {
    this._call = call;
  }
}

export class DonateCall extends ethereum.Call {
  get inputs(): DonateCall__Inputs {
    return new DonateCall__Inputs(this);
  }

  get outputs(): DonateCall__Outputs {
    return new DonateCall__Outputs(this);
  }
}

export class DonateCall__Inputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DonateCall__Outputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PublishCampaignCall extends ethereum.Call {
  get inputs(): PublishCampaignCall__Inputs {
    return new PublishCampaignCall__Inputs(this);
  }

  get outputs(): PublishCampaignCall__Outputs {
    return new PublishCampaignCall__Outputs(this);
  }
}

export class PublishCampaignCall__Inputs {
  _call: PublishCampaignCall;

  constructor(call: PublishCampaignCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PublishCampaignCall__Outputs {
  _call: PublishCampaignCall;

  constructor(call: PublishCampaignCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetCampaignCategoriesCall extends ethereum.Call {
  get inputs(): SetCampaignCategoriesCall__Inputs {
    return new SetCampaignCategoriesCall__Inputs(this);
  }

  get outputs(): SetCampaignCategoriesCall__Outputs {
    return new SetCampaignCategoriesCall__Outputs(this);
  }
}

export class SetCampaignCategoriesCall__Inputs {
  _call: SetCampaignCategoriesCall;

  constructor(call: SetCampaignCategoriesCall) {
    this._call = call;
  }

  get categories(): Array<string> {
    return this._call.inputValues[0].value.toStringArray();
  }
}

export class SetCampaignCategoriesCall__Outputs {
  _call: SetCampaignCategoriesCall;

  constructor(call: SetCampaignCategoriesCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateAccountCall extends ethereum.Call {
  get inputs(): UpdateAccountCall__Inputs {
    return new UpdateAccountCall__Inputs(this);
  }

  get outputs(): UpdateAccountCall__Outputs {
    return new UpdateAccountCall__Outputs(this);
  }
}

export class UpdateAccountCall__Inputs {
  _call: UpdateAccountCall;

  constructor(call: UpdateAccountCall) {
    this._call = call;
  }

  get dataCID(): string {
    return this._call.inputValues[0].value.toString();
  }

  get kind(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class UpdateAccountCall__Outputs {
  _call: UpdateAccountCall;

  constructor(call: UpdateAccountCall) {
    this._call = call;
  }
}

export class UpdateCampaignCall extends ethereum.Call {
  get inputs(): UpdateCampaignCall__Inputs {
    return new UpdateCampaignCall__Inputs(this);
  }

  get outputs(): UpdateCampaignCall__Outputs {
    return new UpdateCampaignCall__Outputs(this);
  }
}

export class UpdateCampaignCall__Inputs {
  _call: UpdateCampaignCall;

  constructor(call: UpdateCampaignCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get startAt(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get endAt(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get dataCID(): string {
    return this._call.inputValues[3].value.toString();
  }

  get goal(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get kind(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get categoryId(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class UpdateCampaignCall__Outputs {
  _call: UpdateCampaignCall;

  constructor(call: UpdateCampaignCall) {
    this._call = call;
  }
}
